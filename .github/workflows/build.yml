name: Build AetherOnePy Executable with Plugins

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub Release'
        required: false
        default: false
        type: boolean
      environment:
        description: 'Plugin Environment'
        required: false
        default: 'ci'
        type: choice
        options:
        - ci
        - production
        - development

env:
  PYTHON_VERSION: '3.11'
  PYINSTALLER_VERSION: '6.14.2'
  PLUGIN_DIR: 'py/plugins'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies (explicitly)
      run: |
        Write-Host "=== Installing Core Dependencies ===" -ForegroundColor Green
        python -m pip install --upgrade pip
        pip install pyinstaller==${{ env.PYINSTALLER_VERSION }}
        # Explicitly install all dependencies to avoid setup.py issues
        pip install flask flask-cors flask-socketio pywebview screeninfo requests

    - name: Prepare plugin directory
      run: |
        Write-Host "=== Preparing Plugin Directory ===" -ForegroundColor Cyan
        mkdir -p ${{ env.PLUGIN_DIR }}

    - name: Clone AetherOne Social Plugin
      run: |
        Write-Host "=== Cloning AetherOne Social Plugin ===" -ForegroundColor Cyan
        git clone https://github.com/emolionl/AetherOnePySocialPlugin.git ${{ env.PLUGIN_DIR }}/AetherOnePySocialPlugin

    - name: Clone Financial Compass Plugin
      run: |
        Write-Host "=== Cloning Financial Compass Plugin ===" -ForegroundColor Cyan
        git clone https://github.com/emolionl/FinCompassPlugin.git ${{ env.PLUGIN_DIR }}/FinCompassPlugin
        
    - name: Install plugin dependencies
      run: |
        Write-Host "=== Installing Plugin Dependencies ===" -ForegroundColor Cyan
        # Install dependencies for each plugin from its requirements.txt
        $requirementFiles = Get-ChildItem -Path "${{ env.PLUGIN_DIR }}" -Filter "requirements.txt" -Recurse -ErrorAction SilentlyContinue
        foreach ($reqFile in $requirementFiles) {
            Write-Host "üì¶ Installing requirements from: $($reqFile.FullName)" -ForegroundColor Cyan
            pip install -r $reqFile.FullName
        }
      shell: pwsh

    - name: Build UI (Angular)
      run: |
        Write-Host "=== Building UI ===" -ForegroundColor Green
        cd ui
        npm install
        npm run build -- --base-href=/
        cd ..

    - name: Clean build directories
      run: |
        Write-Host "=== Cleaning Build Directories ===" -ForegroundColor Yellow
        if (Test-Path "dist") { Remove-Item "dist" -Recurse -Force -ErrorAction SilentlyContinue }
        if (Test-Path "build") { Remove-Item "build" -Recurse -Force -ErrorAction SilentlyContinue }
      shell: pwsh

    - name: Build Executable with plugins
      run: |
        Write-Host "=== Building Executable ===" -ForegroundColor Green
        pyinstaller AetherOnePy.spec --noconfirm --log-level INFO

    - name: Create plugin inventory
      run: |
        Write-Host "=== Creating Plugin Inventory ===" -ForegroundColor Green
        # ... (your original PowerShell script for inventory here) ...
      shell: pwsh

    - name: Verify executable with plugins
      run: |
        Write-Host "=== Verifying Executable ===" -ForegroundColor Green
        # ... (your original PowerShell script for verification here) ...
      shell: pwsh

    - name: Archive build directory
      run: |
        Write-Host "=== Archiving Build Directory ===" -ForegroundColor Green
        # ... (your original PowerShell script for archiving here) ...
      shell: pwsh

    - name: Upload build with plugins
      uses: actions/upload-artifact@v4
      with:
        name: AetherOnePy-WithPlugins-${{ github.sha }}
        path: AetherOnePy-WithPlugins-ci.zip
        retention-days: 30

    - name: Create release with plugins
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: AetherOnePy with Plugins ${{ github.ref_name }}
        body: |
          ## üöÄ AetherOnePy Desktop Application with Plugins
          This release includes the complete AetherOnePy application with all configured plugins.
          
          ### üì¶ What's Included
          - ‚úÖ Complete desktop application
          - ‚úÖ All enabled plugins from the plugins-config.json
          - ‚úÖ Plugin dependencies automatically resolved
          - ‚úÖ Data components and rates database
          
          ### üõ†Ô∏è Installation
          1. Download `AetherOnePy-WithPlugins-ci.zip` from the assets below.
          2. Extract the contents and run `AetherOnePy.exe`.
          
          ---
          Built automatically with GitHub Actions ü§ñ
        files: |
          AetherOnePy-WithPlugins-ci.zip
        draft: false
        prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}